name: Github Actions CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: ${{ matrix.os }} ${{ matrix.compiler }} ${{ matrix.build_type }}
    runs-on: ${{ matrix.runs_on }}
    strategy:
      fail-fast: True
      max-parallel: 1
      matrix:
        os: [MacOS (ARM64), MacOS (AMD4), Windows]
        build_type: [Debug, Release]
        include:
          - os: Windows
            compiler: MSVC
            build_type_variable: CMAKE_CONFIGURATION_TYPES
            runs_on: windows-2022
          - os: MacOS (ARM64)
            compiler: AppleClang
            build_type_variable: CMAKE_BUILD_TYPE
            runs_on: macos-14
          - os: MacOS (AMD4)
            compiler: AppleClang
            build_type_variable: CMAKE_BUILD_TYPE
            runs_on: macos-12
        #   - os: Ubuntu
        #     compiler: Clang
        #     build_type_variable: CMAKE_BUILD_TYPE
        #     runs_on: ubuntu-22

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: True

      - uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - uses: lukka/get-cmake@latest

      - name: Install Conan
        run: |
            python -m pip install --upgrade pip
            pip install conan
            conan --version

      - name: Cache conan
        uses: actions/cache@v4.2.0
        with:
          path: |
            ./.conan_home
          key: ${{ matrix.os }}-${{ matrix.build_type }}-conan-cpp23-${{ hashFiles('conanfile.py') }}

      - name: Configure
        run: |
          mkdir build
          cd build
          cmake .. -Wno-dev -DPPP_BUILD_TESTS=ON -D${{matrix.build_type_variable}}=${{matrix.build_type}}

      - name: Save Cache Conan
        uses: actions/cache/save@v4.2.0
        with:
          path: |
            ./.conan_home
          key: ${{ matrix.os }}-Release-conan-cpp23-${{ hashFiles('conanfile.py') }}

      - name: Build
        run: |
            cd build
            cmake --build . --config ${{matrix.build_type}}

      - name: Test
        run: |
            cd build
            ctest . -C ${{matrix.build_type}} --output-on-failure
